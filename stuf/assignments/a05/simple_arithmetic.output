Terminals unused in grammar

    T_PRINT
    T_SIZE
    T_ERROR


Grammar

    0 $accept: start_symbol $end

    1 start_symbol: expr

    2 expr: expr T_PLUS OP
    3     | expr T_MINUS OP
    4     | OP

    5 OP: OP T_EXP nbr
    6   | OP T_MULTIPLY nbr
    7   | OP T_DIVIDE nbr
    8   | nbr

    9 nbr: T_INT_CONSTANT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_INT_CONSTANT (258) 9
    T_PLUS (259) 2
    T_MINUS (260) 3
    T_MULTIPLY (261) 6
    T_DIVIDE (262) 7
    T_PRINT (263)
    T_SIZE (264)
    T_ERROR (265)
    T_EXP (266) 5


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    start_symbol (13)
        on left: 1
        on right: 0
    expr (14)
        on left: 2 3 4
        on right: 1 2 3
    OP (15)
        on left: 5 6 7 8
        on right: 2 3 4 5 6 7
    nbr (16)
        on left: 9
        on right: 5 6 7 8


State 0

    0 $accept: • start_symbol $end

    T_INT_CONSTANT  shift, and go to state 1

    start_symbol  go to state 2
    expr          go to state 3
    OP            go to state 4
    nbr           go to state 5


State 1

    9 nbr: T_INT_CONSTANT •

    $default  reduce using rule 9 (nbr)


State 2

    0 $accept: start_symbol • $end

    $end  shift, and go to state 6


State 3

    1 start_symbol: expr •
    2 expr: expr • T_PLUS OP
    3     | expr • T_MINUS OP

    T_PLUS   shift, and go to state 7
    T_MINUS  shift, and go to state 8

    $default  reduce using rule 1 (start_symbol)


State 4

    4 expr: OP •
    5 OP: OP • T_EXP nbr
    6   | OP • T_MULTIPLY nbr
    7   | OP • T_DIVIDE nbr

    T_MULTIPLY  shift, and go to state 9
    T_DIVIDE    shift, and go to state 10
    T_EXP       shift, and go to state 11

    $default  reduce using rule 4 (expr)


State 5

    8 OP: nbr •

    $default  reduce using rule 8 (OP)


State 6

    0 $accept: start_symbol $end •

    $default  accept


State 7

    2 expr: expr T_PLUS • OP

    T_INT_CONSTANT  shift, and go to state 1

    OP   go to state 12
    nbr  go to state 5


State 8

    3 expr: expr T_MINUS • OP

    T_INT_CONSTANT  shift, and go to state 1

    OP   go to state 13
    nbr  go to state 5


State 9

    6 OP: OP T_MULTIPLY • nbr

    T_INT_CONSTANT  shift, and go to state 1

    nbr  go to state 14


State 10

    7 OP: OP T_DIVIDE • nbr

    T_INT_CONSTANT  shift, and go to state 1

    nbr  go to state 15


State 11

    5 OP: OP T_EXP • nbr

    T_INT_CONSTANT  shift, and go to state 1

    nbr  go to state 16


State 12

    2 expr: expr T_PLUS OP •
    5 OP: OP • T_EXP nbr
    6   | OP • T_MULTIPLY nbr
    7   | OP • T_DIVIDE nbr

    T_MULTIPLY  shift, and go to state 9
    T_DIVIDE    shift, and go to state 10
    T_EXP       shift, and go to state 11

    $default  reduce using rule 2 (expr)


State 13

    3 expr: expr T_MINUS OP •
    5 OP: OP • T_EXP nbr
    6   | OP • T_MULTIPLY nbr
    7   | OP • T_DIVIDE nbr

    T_MULTIPLY  shift, and go to state 9
    T_DIVIDE    shift, and go to state 10
    T_EXP       shift, and go to state 11

    $default  reduce using rule 3 (expr)


State 14

    6 OP: OP T_MULTIPLY nbr •

    $default  reduce using rule 6 (OP)


State 15

    7 OP: OP T_DIVIDE nbr •

    $default  reduce using rule 7 (OP)


State 16

    5 OP: OP T_EXP nbr •

    $default  reduce using rule 5 (OP)
